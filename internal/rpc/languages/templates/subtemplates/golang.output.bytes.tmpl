switch remixdbInternalPacketType {
case 0x03:
	return []byte{}, nil
case 0x07:
	// Continue through.
default:
	return remixdbInternalError(remixdbInternalUnexpectedPacket("bytes", remixdbInternalPacketType))
}

remixdbInternalRootLength := len(b)
if remixdbInternalRootLength < 4 {
	return remixdbInternalError(ServerError{
		Code:    "malformed_packet",
		Message: "Less than 4 bytes after bytes header out of root",
	})
}

remixdbInternalBytesLength := binary.BigEndian.Uint32(b[:4])
b = b[4:]
remixdbInternalRootLength -= 4

if remixdbInternalBytesLength > uint32(remixdbInternalRootLength) {
	return remixdbInternalError(ServerError{
		Code:    "malformed_packet",
		Message: "Not enough bytes after bytes header for the length specified",
	})
}

remixdbInternalValue := b[:remixdbInternalBytesLength]
b = b[remixdbInternalBytesLength:]

return remixdbInternalValue, nil
